# -*- coding: utf-8 -*-
# Generated by Django 1.10.6 on 2017-05-11 12:18
from __future__ import unicode_literals

import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('game', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Award',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Name of the award.', max_length=100, verbose_name='Award name')),
                ('year', models.PositiveIntegerField(help_text='Year the award was won.', validators=[django.core.validators.MinValueValidator(1962, 'Our University had not been built at this time!'), django.core.validators.MaxValueValidator(2017, 'We believe the award was not won in the future!')], verbose_name='Year')),
                ('place', models.CharField(help_text='Place where the game won the award.', max_length=100, verbose_name='Place')),
            ],
        ),
        migrations.CreateModel(
            name='Developer',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Name of the developer.', max_length=100, verbose_name='Name')),
                ('avatar', models.FileField(blank=True, help_text='Developer image.', upload_to='public/avatar', verbose_name='Avatar')),
                ('login', models.CharField(help_text='Developer login for github.', max_length=50, verbose_name='Login')),
                ('email', models.EmailField(blank=True, help_text='Developer contact e-mail.', max_length=100, null=True, validators=[django.core.validators.EmailValidator()], verbose_name='E-mail')),
                ('github_page', models.URLField(help_text='Developer Github page.', validators=[django.core.validators.URLValidator()], verbose_name='Github Page')),
            ],
        ),
        migrations.CreateModel(
            name='Information',
            fields=[
                ('description', models.TextField(help_text='Describe the game.', validators=[django.core.validators.MinLengthValidator(50, 'A game description must have at least 50 characters!')], verbose_name='Description')),
                ('launch_year', models.PositiveIntegerField(help_text='Which was the year the game was launched?', validators=[django.core.validators.MinValueValidator(1962, 'Our University had not been built at this time!'), django.core.validators.MaxValueValidator(2017, 'We believe the game was not won in the future!')], verbose_name='Launch Year')),
                ('game', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to='game.Game')),
                ('awards', models.ManyToManyField(blank=True, related_name='awards', to='information.Award')),
                ('developers', models.ManyToManyField(related_name='developers', to='information.Developer')),
            ],
        ),
        migrations.CreateModel(
            name='Statistic',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('downloads_amount', models.BigIntegerField(help_text='Amount of downloads of the game.', verbose_name='Dowloads Amount')),
                ('accesses_amount', models.BigIntegerField(help_text='Amount of accesses to the game.', verbose_name='Accesses Amount')),
            ],
        ),
    ]
